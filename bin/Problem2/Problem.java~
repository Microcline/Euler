package Problem2;
/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 */

/**
 * 
 * @author Jacob
 * @date Sunday, 6 July 2014 1:41PM
 * I messed up on the argument, and not understanding the Fibonacci algorithm iteratively, or even recursively.
 */
public class Problem {
	public static int total = 0;
	public static void main(String [] args) {
		fibo(100);
		System.out.println(total);
	}


	/*
	 * Adds the even fibonacci terms that are less than the argument's fibonacci number index
	 */
	private static void fibo(int n) {
		int f1 = 0;
		int f2 = 1;
		int fn;
		for (int i = 2; i < n; i++) {
			fn = f1 + f2;
			System.out.println(fn);
			if(fn > 4000000) return;
			else if(fn % 2 == 0)
				total += fn;
			f1 = f2;
			f2 = fn;
		}
	}
}


